There's no licence for this code, I don't like lawspeak anyway. Simply use it without any limitation in any way you want to, that's all. The only guarantee there is there are bugs in the code :) With any questions or comments, contact me please at ocs (at) ocs (dot) cz.

=== known TODOs ===
- raw dict editor for all items (either improved raw viewer, or text-based)
- model group support
- validations (when saving, before SQL generation, when user asks to, in reasonable extent automatically... among others, warn/not err/ on different packages in model...)
- reasonable prototype support (can't be done before model groups)
- undo with UserInfo editor
- smart relationship editor, M:N management etc
- better fetch spec editor
- better SQL generation with customizable templates (perhaps flexible enough for Java generation too, presumed anyone still uses that EOGenerator thing?)
- model creation (which would work, unlike the current model creation :))
- stored procedures... does anybody use the thing?
- entity indexes
=== convenience and aesthetics ===
- make smartsort model-based, not global
- paste/dragdrop model objects full-featured (eg., paste attribs/relationships into entities; solve class props, etc.)
- drag-based relationship creation
- why the hell up/down arrows do not work in attribute/relationship lists?!?
- when renaming attribs/rels, update entity lists (class props etc.), and to stay on the safe side, warn/remove on saving on old ids in those lists. Update also usages in relationships (ditto for entity names, used as destinations)
- default entity templates: New.. from template, auto-copies
- auto-fill usual things like EOInnerJoin for rels (or leave it to validations?)

=== 2.9 ===
Implemented own plist output format
- it is better than relying on essentially undocumented strings file export behaviour
- it allows us to sort dictionary items, making so files much more diff-friendly

Improved SQL name generator not to dup _'s

Model can have a default package, which is automatically prepended to all suggested class names.

Model can contain a default package name, which is automatically added to all newly created class names.

Also: bumped up minimal version, no need to support really ancient macOSen :)

=== 2.8 ===
- added support for so-far-forgotten valueFactoryClassName
- a couple of small cosmetic improvements, mostly autolayout-side

=== 2.7 ===
- fixed an entity format with fspecs (no fetchSpecificationDictionary)
- also, got rid of the new warnings

=== 2.6 ===
- parent entity stored into index

=== 2.5 ===
- removed all number formatters (attributes width/precision/scale, relationship batch count): they made problems when archived as plist

=== 2.4 === *QUICK AND DIRTY* FS and SharedCTXT support
- fixed sharing EOSharedCTXT FS names: can be edited more or less manually like comma-(or-anything)-separated list; below is a list of available FSs. Not good, but quick :)
- when saving, entities whose EOSharedCTXT FS names list is nonempty are automatically set as "entitiesWithSharedObjects"
- the FS column in entities shows number of shared ones if any
- click on FS column opens the FS editor -- at the moment, archived plaintext, sorry. Better'n'nothing :)

=== 2.3 ===
- implemented copy/paste -- first Q&D attempt, not as smart as should be

=== 2.2 ===
- small fix -- inserting attribs/relationships into entity which did have none now works properly

=== 2.1 ===

- added this History file to keep track of changes and todos
- slightly cleaned up sources, removed some old out-commented nonsense etc, made sure there are no warnings (LLVM 5.1, did not test elsewhere)
- added menu alternatives for toolbar items
- ensured the lists in model window are by default sorted by name
- moved fixed lists to Preferences. No GUI, but added a Prefs window which hints what to do
- activated SQL generation and improved it to support adding columns
- fixed the installed-accessor bug, was not Apple's, but mine all the time. D'oh! Subsequently, had to fix undo, too.

=== 2.0 ===
First published version, somewhat useable, though not much. No documentation at all

=== 1.0 ===
An attempt to create a Modeller ages ago, never really worked :)
